# ==============================
# 📌 数据库基础配置
# ==============================

DB_USER=your_username        # 数据库用户名
DB_PASSWORD=your_password    # 数据库密码（请务必修改）
DB_HOST=your_host            # 数据库主机地址（本地可以填 localhost）
DB_PORT=your_port            # 数据库端口（MySQL 默认 3306，PostgreSQL 默认 5432）
DB_NAME=your_database        # 数据库名称（请替换为你的数据库名）

# ==============================
# 📌 数据库连接池配置（优化性能）
# ==============================

DB_POOL_SIZE=10              # 连接池大小（默认 10 个连接）
DB_POOL_TIMEOUT=30           # 连接池超时时间（单位：秒）
DB_POOL_RECYCLE=1800         # 连接池回收时间（单位：秒）

# ⚠️ 修正了原始 `DB_POOL_RECYCLE=1800ji` 的错误，去掉 `ji`。

# ==============================
# 📌 生产环境数据库配置（高并发优化）
# ==============================

PROD_DB_POOL_SIZE=100        # 生产环境下的连接池大小（更大以支持高并发）
PROD_DB_POOL_RECYCLE=280     # 生产环境下的连接池回收时间（单位：秒）

# ==============================
# 📌 API 配置
# ==============================

DEEPSEEK_API_KEY=your_api_key  # 你的 DeepSeek API Key（用于调用 AI 相关功能）

# ==============================
# 📌 安全配置
# ==============================

SECRET_KEY=your_secret_key   # Flask 密钥（用于加密 session 和 CSRF 保护）

# ==============================
# 📌 日志配置
# ==============================

LOG_LEVEL=INFO               # 日志级别（可选：DEBUG / INFO / WARNING / ERROR / CRITICAL）
LOG_FILE=app.log             # 日志文件路径（相对于项目根目录）
LOG_MAX_BYTES=10485760       # 单个日志文件的最大大小（10MB，超出后滚动日志）
LOG_BACKUP_COUNT=10          # 备份的日志文件数量（超过后自动删除旧日志）

# ==============================
# 📌 缓存配置
# ==============================

CACHE_TYPE=simple            # 缓存类型（可选：simple / redis / memcached）

# ==============================
# 📌 开发环境配置
# ==============================

SQLALCHEMY_ECHO=true         # 是否打印 SQL 语句（仅开发环境启用，生产环境建议设为 false）

# ==============================
# 📌 推荐功能配置
# ==============================

RECOMMEND_LIMIT_DEFAULT=5               # 默认推荐数量
RECOMMEND_LIMIT_MAX=20                  # 最大推荐数量
RECOMMEND_STRATEGY_DEFAULT=weighted     # 默认推荐策略（可选：popular/user_cf/item_cf/weighted）
RECOMMEND_CACHE_SECONDS=300             # 推荐结果缓存秒数
RECOMMEND_WEIGHT_USER=0.4               # 用户协同过滤权重（0～1）
RECOMMEND_WEIGHT_POPULAR=0.6            # 热门推荐权重（0～1）